name: Docker Build and Push

on:
  workflow_call:
    inputs:
      VERSION:
        required: true
        type: string
      ECR_REPO:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GH_TOKEN:
        required: true
jobs:
  build_push:
    runs-on: ubuntu-20.04
    steps:
      - run: env
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr_repo }}
          IMAGE_TAG: ${{ inputs.version }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          docker build --build-arg GH_TOKEN=$GH_TOKEN \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: push image with latest tag
        if: ${{ github.REF_NAME == 'feature/new-feature-env' }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr_repo }}
          IMAGE_TAG: ${{ inputs.version }}
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
